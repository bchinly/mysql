<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>test</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>name</key>
			<string>mysql</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8</string>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJX
			TlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAF
			gAdUdHlwZVRyb3dzXxAdU2VsZWN0aW9uRGV0YWlsVHlwZU5TSW5k
			ZXhTZXTSFwsYGVxOU1JhbmdlQ291bnQQAIAG0hscHR5aJGNsYXNz
			bmFtZVgkY2xhc3Nlc1pOU0luZGV4U2V0oh8gWk5TSW5kZXhTZXRY
			TlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVk
			QXJjaGl2ZXLRJidUZGF0YYABAAgAEQAaACMALQAyADcAQABGAE0A
			VQBgAGcAagBsAG4AcQBzAHUAdwB8AIEAoQCmALMAtQC3ALwAxwDQ
			ANsA3gDpAPIA9wEEAQcBGQEcASEAAAAAAAACAQAAAAAAAAAoAAAA
			AAAAAAAAAAAAAAABIw==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {694, 450}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string></string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>200</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>DROP TABLE IF EXISTS student;
CREATE TABLE student(
	first_name VARCHAR(30) NOT NULL,
	last_name VARCHAR(30) NOT NULL,
	email VARCHAR(60) NULL,
	street VARCHAR(50) NOT NULL,
	city VARCHAR(40) NOT NULL,
	state CHAR(2) NOT NULL DEFAULT "PA",
	zip MEDIUMINT UNSIGNED NOT NULL,
	phone VARCHAR(20) NOT NULL,
	birth_date DATE NOT NULL,
	sex ENUM('M', 'F') NOT NULL,
	date_entered TIMESTAMP,
	lunch_cost FLOAT NULL,
	student_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
)</string>
		<string>CREATE TABLE student(
	first_name VARCHAR(30) NOT NULL,
	last_name VARCHAR(30) NOT NULL,
	email VARCHAR(60) NULL,
	street VARCHAR(50) NOT NULL,
	city VARCHAR(40) NOT NULL,
	state CHAR(2) NOT NULL DEFAULT "PA",
	zip MEDIUMINT UNSIGNED NOT NULL,
	phone VARCHAR(20) NOT NULL,
	birth_date DATE NOT NULL,
	sex ENUM('M', 'F') NOT NULL,
	date_entered TIMESTAMP,
	lunch_cost FLOAT NULL,
	student_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
)</string>
		<string>drop table employee;
drop table employees;
drop table salary;
drop table sales</string>
		<string>select * from employees order by salary desc;
select top 1 salary from
(select distinct top 3 salary
from employees
order by salary desc)
result
order by salary</string>
		<string>select * from employees order by salary desc</string>
		<string>select * from eployees order by salary desc</string>
		<string>drop table if exists employees;
create table employees (
	id int not null auto_increment,
	firstname varchar(255),
	lastname varchar(255),
	gender varchar(255),
	salary int,
	primary key (id)
);
Insert into Employees (firstname, lastname, gender, salary)
values ('Ben', 'Hoskins', 'Male', 70000);
Insert into Employees (firstname, lastname, gender, salary)
values ('Mark', 'Hastings', 'Male', 60000);
Insert into Employees (firstname, lastname, gender, salary)
values ('Steve', 'Pound', 'Male', 45000);
Insert into Employees (firstname, lastname, gender, salary)
values ('Ben', 'Hoskins', 'Male', 70000);
Insert into Employees (firstname, lastname, gender, salary)
values ('Philip', 'Hastings', 'Male', 45000);
Insert into Employees (firstname, lastname, gender, salary)
values ('Mary', 'Lambeth', 'Female', 30000);
Insert into Employees (firstname, lastname, gender, salary)
values ('Valarie', 'Vikings', 'Female', 35000);
Insert into Employees (firstname, lastname, gender, salary)
values ('John', 'Stanmore', 'Male', 80000)</string>
		<string>drop table if exists employees;
create table employees (
	id int not null auto_increment,
	firstname varchar(255),
	lastname varchar(255),
	gender varchar(255),
	salary int,
	primary key (id)
);
Insert into Employees (firstname, lastname, gender, salary)
values ('Ben', 'Hoskins', 'Male', 70000);
Insert into Employees (firstname, lastname, gender, salary)
Insert into Employees values ('Mark', 'Hastings', 'Male', 60000)</string>
		<string>drop table if exists employees;
create table employees (
	id int not null auto_increment,
	firstname varchar(255),
	lastname varchar(255),
	gender varchar(255),
	salary int,
	primary key (id)
);
Insert into Employees (firstname, lastname, gender, salary)
values ('Ben', 'Hoskins', 'Male', 70000);
Insert into Employees values ('Mark', 'Hastings', 'Male', 60000)</string>
		<string>drop table if exists employees;
create table employees (
	id int not null auto_increment,
	firstname varchar(255),
	lastname varchar(255),
	gender varchar(255),
	salary int,
	primary key (id)
);
Insert into Employees values (1, 'Ben', 'Hoskins', 'Male', 70000)
Insert into Employees values (2, 'Mark', 'Hastings', 'Male', 60000)
Insert into Employees values (3, 'Steve', 'Pound', 'Male', 45000)
Insert into Employees values (4, 'Ben', 'Hoskins', 'Male', 70000)
Insert into Employees values (5, 'Philip', 'Hastings', 'Male', 45000)
Insert into Employees values (6, 'Mary', 'Lambeth', 'Female', 30000)
Insert into Employees values (7, 'Valarie', 'Vikings', 'Female', 35000)
Insert into Employees values (8, 'John', 'Stanmore', 'Male', 80000)</string>
		<string>drop table if exists employees;
create table employees (
	id int not null auto_increment,
	firstname varchar(255),
	lastname varchar(255),
	gender varchar(255),
	salary int,
	primary key (id)
);
Insert into Employees values (1, 'Ben', 'Hoskins', 'Male', 70000);
Insert into Employees values (2, 'Mark', 'Hastings', 'Male', 60000);
Insert into Employees values (3, 'Steve', 'Pound', 'Male', 45000)
Insert into Employees values (4, 'Ben', 'Hoskins', 'Male', 70000)
Insert into Employees values (5, 'Philip', 'Hastings', 'Male', 45000)
Insert into Employees values (6, 'Mary', 'Lambeth', 'Female', 30000)
Insert into Employees values (7, 'Valarie', 'Vikings', 'Female', 35000)
Insert into Employees values (8, 'John', 'Stanmore', 'Male', 80000)</string>
		<string>drop table if exists employees;
create table employees (
	id int not null auto_increment,
	firstname varchar(255),
	lastname varchar(255),
	gender varchar(255),
	salary int,
	primary key (id)
);
Insert into Employees values ('Ben', 'Hoskins', 'Male', 70000)</string>
		<string>drop table if exists employees;
create table employees (
	id int not null auto_increment,
	firstname varchar(255),
	lastname varchar(255),
	gender varchar(255),
	salary int,
	primary key (id)
);
Insert into Employees values ('Ben', 'Hoskins', 'Male', 70000)
Insert into Employees values ('Mark', 'Hastings', 'Male', 60000)
Insert into Employees values ('Steve', 'Pound', 'Male', 45000)
Insert into Employees values ('Ben', 'Hoskins', 'Male', 70000)
Insert into Employees values ('Philip', 'Hastings', 'Male', 45000)
Insert into Employees values ('Mary', 'Lambeth', 'Female', 30000)
Insert into Employees values ('Valarie', 'Vikings', 'Female', 35000)
Insert into Employees values ('John', 'Stanmore', 'Male', 80000)</string>
		<string>drop table if exists employees;
create table employees (
	id int not null auto_increment,
	name varchar(255),
	salary int,
	primary key (id)
)</string>
		<string>drop table if exists employees;
create table employees (
	id int not null auto_increment,
	name varchar(255),
	primary key (id)
)</string>
		<string>Create table Employees
(
ID int primary key identity,
FirstName nvarchar(50),
LastName nvarchar(50),
Gender nvarchar(50),
Salary int
)</string>
		<string>drop table if exists employees

CREATE TABLE employees (
    id int NOT NULL AUTO_INCREMENT,
    name varchar(255),
	salary int,
    PRIMARY KEY (ID)
)</string>
		<string>drop table if exists employees

CREATE TABLE employees (
    id int NOT NULL AUTO_INCREMENT,
    Name varchar(255),
	salary int,
    PRIMARY KEY (ID)
)</string>
		<string>drop table if exists employees

CREATE TABLE employees (
    id int NOT NULL AUTO_INCREMENT,
    FirstName varchar(255),
    LastName varchar(255),
    gender varchar(255),
    PRIMARY KEY (ID)
)</string>
		<string>drop table if exists Employees

CREATE TABLE employees (
    id int primary key identity,
    FirstName varchar(255),
    LastName varchar(255),
    gender varchar(255),
    salary int
)</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.7.18</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
