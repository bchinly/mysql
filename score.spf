<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>test</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>name</key>
			<string>score</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8</string>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJX
			TlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAF
			gAdUdHlwZVRyb3dzXxAdU2VsZWN0aW9uRGV0YWlsVHlwZU5TSW5k
			ZXhTZXTSFwsYGVxOU1JhbmdlQ291bnQQAIAG0hscHR5aJGNsYXNz
			bmFtZVgkY2xhc3Nlc1pOU0luZGV4U2V0oh8gWk5TSW5kZXhTZXRY
			TlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVk
			QXJjaGl2ZXLRJidUZGF0YYABAAgAEQAaACMALQAyADcAQABGAE0A
			VQBgAGcAagBsAG4AcQBzAHUAdwB8AIEAoQCmALMAtQC3ALwAxwDQ
			ANsA3gDpAPIA9wEEAQcBGQEcASEAAAAAAAACAQAAAAAAAAAoAAAA
			AAAAAAAAAAAAAAABIw==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {1080, 639}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>DROP TABLE IF EXISTS scores;

CREATE TABLE scores (
	student_id INT UNSIGNED NOT NULL,
	test_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(test_id, student_id)
);

INSERT INTO scores VALUES
	(1, 1, 15),
	(1, 2, 14),
	(1, 3, 28),
	(1, 4, 29),
	(1, 5, 15),
	(1, 6, 27),
	(2, 1, 14),
	(2, 2, 28),
	(2, 3, 29),
	(2, 4, 15),
	(2, 5, 15),
	(2, 6, 14),
	(3, 1, 28),
	(3, 2, 29),
	(3, 3, 15),
	(3, 4, 15),
	(3, 5, 14),
	(3, 6, 28),
	(4, 1, 29),
	(4, 2, 15),
	(4, 3, 15),
	(4, 4, 14),
	(4, 5, 28),
	(4, 6, 29),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(6, 1, 15),
	(6, 2, 15),
	(6, 3, 14),
	(6, 4, 28),
	(6, 5, 29),
	(6, 6, 15),
	(7, 1, 15),
	(7, 2, 15),
	(7, 3, 14),
	(7, 4, 28),
	(7, 5, 29),
	(7, 6, 15),
	(8, 1, 15),
	(8, 2, 15),
	(8, 3, 14),
	(8, 4, 28),
	(8, 5, 29),
	(8, 6, 15),
	(9, 1, 15),
	(9, 2, 15),
	(9, 3, 14),
	(9, 4, 28),
	(9, 5, 29),
	(9, 6, 15),
	(10, 1, 15),
	(10, 2, 15),
	(10, 3, 14),
	(10, 4, 28),
	(10, 5, 29),
	(10, 6, 15);
	</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>200</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>DROP TABLE IF EXISTS scores;
CREATE TABLE scores (
	student_id INT UNSIGNED NOT NULL,
	test_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(test_id, student_id)
);
INSERT INTO scores VALUES
	(1, 1, 15),
	(1, 2, 14),
	(1, 3, 28),
	(1, 4, 29),
	(1, 5, 15),
	(1, 6, 27),
	(2, 1, 14),
	(2, 2, 28),
	(2, 3, 29),
	(2, 4, 15),
	(2, 5, 15),
	(2, 6, 14),
	(3, 1, 28),
	(3, 2, 29),
	(3, 3, 15),
	(3, 4, 15),
	(3, 5, 14),
	(3, 6, 28),
	(4, 1, 29),
	(4, 2, 15),
	(4, 3, 15),
	(4, 4, 14),
	(4, 5, 28),
	(4, 6, 29),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(6, 1, 15),
	(6, 2, 15),
	(6, 3, 14),
	(6, 4, 28),
	(6, 5, 29),
	(6, 6, 15),
	(7, 1, 15),
	(7, 2, 15),
	(7, 3, 14),
	(7, 4, 28),
	(7, 5, 29),
	(7, 6, 15),
	(8, 1, 15),
	(8, 2, 15),
	(8, 3, 14),
	(8, 4, 28),
	(8, 5, 29),
	(8, 6, 15),
	(9, 1, 15),
	(9, 2, 15),
	(9, 3, 14),
	(9, 4, 28),
	(9, 5, 29),
	(9, 6, 15),
	(10, 1, 15),
	(10, 2, 15),
	(10, 3, 14),
	(10, 4, 28),
	(10, 5, 29),
	(10, 6, 15)</string>
		<string>DROP TABLE IF EXISTS score</string>
		<string>DROP TABLE IF EXISTS score;
CREATE TABLE score (
	student_id INT UNSIGNED NOT NULL,
	test_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(test_id, student_id)
);
INSERT INTO score VALUES
	(1, 1, 15),
	(1, 2, 14),
	(1, 3, 28),
	(1, 4, 29),
	(1, 5, 15),
	(1, 6, 27),
	(2, 1, 14),
	(2, 2, 28),
	(2, 3, 29),
	(2, 4, 15),
	(2, 5, 15),
	(2, 6, 14),
	(3, 1, 28),
	(3, 2, 29),
	(3, 3, 15),
	(3, 4, 15),
	(3, 5, 14),
	(3, 6, 28),
	(4, 1, 29),
	(4, 2, 15),
	(4, 3, 15),
	(4, 4, 14),
	(4, 5, 28),
	(4, 6, 29),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(6, 1, 15),
	(6, 2, 15),
	(6, 3, 14),
	(6, 4, 28),
	(6, 5, 29),
	(6, 6, 15),
	(7, 1, 15),
	(7, 2, 15),
	(7, 3, 14),
	(7, 4, 28),
	(7, 5, 29),
	(7, 6, 15),
	(8, 1, 15),
	(8, 2, 15),
	(8, 3, 14),
	(8, 4, 28),
	(8, 5, 29),
	(8, 6, 15),
	(9, 1, 15),
	(9, 2, 15),
	(9, 3, 14),
	(9, 4, 28),
	(9, 5, 29),
	(9, 6, 15),
	(10, 1, 15),
	(10, 2, 15),
	(10, 3, 14),
	(10, 4, 28),
	(10, 5, 29),
	(10, 6, 15)</string>
		<string>DROP TABLE IF EXISTS score;
CREATE TABLE score (
	student_id INT UNSIGNED NOT NULL,
	test_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(test_id, student_id)
);
INSERT INTO score VALUES
	(1, 1, 15),
	(1, 2, 14),
	(1, 3, 28),
	(1, 4, 29),
	(1, 5, 15),
	(1, 6, 27),
	(2, 1, 14),
	(2, 2, 28),
	(2, 3, 29),
	(2, 4, 15),
	(2, 5, 15),
	(2, 6, 14),
	(3, 1, 28),
	(3, 2, 29),
	(3, 3, 15),
	(3, 4, 15),
	(3, 5, 14),
	(3, 6, 28),
	(4, 1, 29),
	(4, 2, 15),
	(4, 3, 15),
	(4, 4, 14),
	(4, 5, 28),
	(4, 6, 29),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(6, 1, 15),
	(6, 2, 15),
	(6, 3, 14),
	(6, 4, 28),
	(6, 5, 29),
	(6, 6, 15),
	(7, 1, 15),
	(7, 2, 15),
	(7, 3, 14),
	(7, 4, 28),
	(7, 5, 29),
	(7, 6, 15),
	(8, 1, 15),
	(8, 2, 15),
	(8, 3, 14),
	(8, 4, 28),
	(8, 5, 29),
	(8, 6, 15),
	(9, 1, 15),
	(9, 2, 15),
	(9, 3, 14),
	(9, 4, 28),
	(9, 5, 29),
	(9, 6, 15),
	(10, 1, 15),
	(10, 2, 15),
	(10, 3, 14),
	(10, 4, 28),
	(10, 5, 29),
	(10, 6, 15),
)</string>
		<string>INSERT INTO score VALUES
	(1, 1, 15),
	(1, 2, 14),
	(1, 3, 28),
	(1, 4, 29),
	(1, 5, 15),
	(1, 6, 27),
	(2, 1, 14),
	(2, 2, 28),
	(2, 3, 29),
	(2, 4, 15),
	(2, 5, 15),
	(2, 6, 14),
	(3, 1, 28),
	(3, 2, 29),
	(3, 3, 15),
	(3, 4, 15),
	(3, 5, 14),
	(3, 6, 28),
	(4, 1, 29),
	(4, 2, 15),
	(4, 3, 15),
	(4, 4, 14),
	(4, 5, 28),
	(4, 6, 29),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(6, 1, 15),
	(6, 2, 15),
	(6, 3, 14),
	(6, 4, 28),
	(6, 5, 29),
	(6, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15)</string>
		<string>DROP TABLE IF EXISTS score;
CREATE TABLE score (
	student_id INT UNSIGNED NOT NULL,
	test_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(test_id, student_id)
)</string>
		<string>DROP TABLE IF EXISTS score;
CREATE TABLE score (
	student_id INT UNSIGNED NOT NULL,
	test_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(test_id, student_id)
);
INSERT INTO score VALUES
	(1, 1, 15),
	(1, 2, 14),
	(1, 3, 28),
	(1, 4, 29),
	(1, 5, 15),
	(1, 6, 27),
	(2, 1, 14),
	(2, 2, 28),
	(2, 3, 29),
	(2, 4, 15),
	(2, 5, 15),
	(2, 6, 14),
	(3, 1, 28),
	(3, 2, 29),
	(3, 3, 15),
	(3, 4, 15),
	(3, 5, 14),
	(3, 6, 28),
	(4, 1, 29),
	(4, 2, 15),
	(4, 3, 15),
	(4, 4, 14),
	(4, 5, 28),
	(4, 6, 29),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(6, 1, 15),
	(6, 2, 15),
	(6, 3, 14),
	(6, 4, 28),
	(6, 5, 29),
	(6, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15)</string>
		<string>DROP TABLE IF EXISTS score;
CREATE TABLE score (
	student_id INT UNSIGNED NOT NULL,
	event_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(test_id, student_id)
)</string>
		<string>DROP TABLE IF EXISTS score;
CREATE TABLE score (
	student_id INT UNSIGNED NOT NULL,
	event_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(event_id, student_id)
);
INSERT INTO score VALUES
	(1, 1, 15),
	(1, 2, 14),
	(1, 3, 28),
	(1, 4, 29),
	(1, 5, 15),
	(1, 6, 27),
	(2, 1, 14),
	(2, 2, 28),
	(2, 3, 29),
	(2, 4, 15),
	(2, 5, 15),
	(2, 6, 14),
	(3, 1, 28),
	(3, 2, 29),
	(3, 3, 15),
	(3, 4, 15),
	(3, 5, 14),
	(3, 6, 28),
	(4, 1, 29),
	(4, 2, 15),
	(4, 3, 15),
	(4, 4, 14),
	(4, 5, 28),
	(4, 6, 29),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(6, 1, 15),
	(6, 2, 15),
	(6, 3, 14),
	(6, 4, 28),
	(6, 5, 29),
	(6, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15),
	(5, 1, 15),
	(5, 2, 15),
	(5, 3, 14),
	(5, 4, 28),
	(5, 5, 29),
	(5, 6, 15)</string>
		<string>DROP TABLE IF EXISTS score;
CREATE TABLE score (
	student_id INT UNSIGNED NOT NULL,
	event_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(event_id, student_id)
)</string>
		<string>DROP TABLE IF EXISTS test;
CREATE TABLE score (
	student_id INT UNSIGNED NOT NULL,
	event_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(event_id, student_id)
)</string>
		<string>DROP TABLE IF EXISTS test</string>
		<string>CREATE TABLE score (
	student_id INT UNSIGNED NOT NULL,
	event_id INT UNSIGNED NOT NULL,
	score INT NOT NULL,
	PRIMARY KEY(event_id, student_id)
)</string>
		<string>CREATE TABLE test(
	date DATE NOT NULL,
	type ENUM('T', 'Q') NOT NULL,
	class_id INT UNSIGNED NOT NULL,
	test_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
)</string>
		<string>CREATE TABLE test(
	date DATE NOT NULL,
	type ENUM('T', 'Q') NOT NULL,
	class_id INT UNSIGNED NOT NULL,
	test_id INT UNSIGNED NOT NULL AUTO INCREMENT PRIMARY KEY
)</string>
		<string>Select * FROM class</string>
		<string>SELECT * FROM student;
Select * FROM class</string>
		<string>DROP TABLE IF EXISTS class;
CREATE TABLE class(
	name VARCHAR(30) NOT NULL,
	class_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
);
INSERT INTO class VALUES
('English', NULL), ('Speech', NULL), ('Literature', NULL),
('Algebra', NULL), ('Geometry', NULL), ('Trigonometry', NULL),
('Calculus', NULL), ('Earth Science', NULL), ('Biology', NULL),
('Chemistry', NULL), ('Physics', NULL), ('History', NULL), ('Art', NULL), ('Gym', NULL)</string>
		<string>DROP TABLE IF EXISTS class;
CREATE TABLE class(
	name VARCHAR(30) NOT NULL,
	class_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
)</string>
		<string>DROP TABLE IF EXISTS class;
CREATE TABLE class(
	name VARCHAR(30) NOT NULL,
	class_id UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY
)</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.7.18</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
